import { container } from "@sapphire/pieces";
import { BobertClient } from "./client";
import { EmbedBuilder, TextChannel } from "discord.js";

export default async (client: BobertClient) => {
	const scoreboardChannel = (await client.channels.fetch(
		container.config.bot.scoreboard_channel,
	)) as TextChannel;

	const scoreboardMessage = await scoreboardChannel.messages.fetch(
		container.config.bot.autogenerated!.scoreboard_message,
	);

	const embed = new EmbedBuilder()
		.setColor(0xff4500)
		.setTitle("Event Leaderboard")
		.setDescription("Click the button below to join a team!");

	const guild = await client.guilds.fetch(container.config.bot.guild);

	for (const teamId of container.config.event.teams) {
		const role = await guild.roles.fetch(teamId);

		const team = await container.database.team.upsert({
			where: { snowflake: teamId },
			update: {}, // an empty update object means this will just create it
			create: {
				snowflake: teamId,
			},
			include: { _count: { select: { players: true } } },
		});

		const teamScore =
			(
				await container.database.player.aggregate({
					where: {
						teamSnowflake: teamId,
					},
					_sum: {
						score: true,
					},
				})
			)._sum.score || 0;

		embed.addFields({
			name: role!.name,
			value: `${team?._count.players} players\n${teamScore} points`,
			inline: true,
		});
	}

	scoreboardMessage.edit({ embeds: [embed] });
};
