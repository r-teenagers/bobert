import { appendFileSync } from "fs";
import { container } from "@sapphire/pieces";
import * as config from "../../config.toml";

export type BobertConfig = {
	bot: {
		token: string;
		guild: string;
		category: string;
		log_channel: string;
		blacklisted_channels: string[] | null;
		scoreboard_channel: string;
		autogenerated: {
			scoreboard_message: string;
		} | null;
	};
	event: {
		teams: string[];
		items: BobertItem[];
		min_send_delay: number | null;
		max_send_delay: number | null;
	};
};

export type BobertItem = {
	name: string;
	emoji: string;
	response: string;
	net_score: number;
	auto_react: boolean | null;
	weight: number | null;
	collection_indow: number | null;
};

const isBlankOrUndefined = (property: string | null): boolean =>
	!property || property === "";

export async function setupConfig(): Promise<BobertConfig> {
	console.log(JSON.stringify(config, null, 2));

	if (isBlankOrUndefined(config.bot.token)) {
		container.logger.fatal("Token not provided in config.toml. Exiting.");
		process.exit(1);
	}

	if (
		isBlankOrUndefined(config.bot.guild) ||
		isBlankOrUndefined(config.bot.category) ||
		isBlankOrUndefined(config.bot.scoreboard_channel) ||
		isBlankOrUndefined(config.bot.log_channel)
	) {
		container.logger.fatal("Guild configuration not provided. Exiting.");
		process.exit(1);
	}

	if (
		config.event.teams.length === 0 ||
		config.event.teams.some((t: string) => t.length === 0)
	) {
		container.logger.fatal("Teams not provided or invalid. Exiting.");
		process.exit(1);
	}

	container.config = config;

	// this gets generated on first run so it may not yet exist
	if (config.bot.autogenerated) {
		container.logger.info(
			`Found previously generated config! Scoreboard ID is ${config.bot.autogenerated.scoreboard_message}.`,
		);
		container.config.bot.autogenerated = config.bot.autogenerated;
	}

	return config;
}

export function writeEmbedSnowflake(snowflake: string) {
	const tomlString = `\n\n# AUTOGENERATED CONFIG BELOW HERE\n# DO NOT CHANGE!\n[bot.autogenerated]\nscoreboard_message = "${snowflake}"`;

	appendFileSync("./config.toml", tomlString);
	container.config.bot.autogenerated = { scoreboard_message: snowflake };
}
